#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define MAX 100

void sortString(char *str) {
    int length = strlen(str);
    for (int i = 0; i < length - 1; i++) {
        for (int j = i + 1; j < length; j++) {
            if (str[i] > str[j]) {
                char temp = str[i];
                str[i] = str[j];
                str[j] = temp;
            }
        }
    }
}

int areAnagrams(char *str1, char *str2) {
    char temp1[MAX], temp2[MAX];
    int k = 0;
    for (int i = 0; str1[i]; i++) {
        if (!isspace(str1[i])) {
            temp1[k++] = tolower(str1[i]);
        }
    }
    temp1[k] = '\0';

    k = 0;
    for (int i = 0; str2[i]; i++) {
        if (!isspace(str2[i])) {
            temp2[k++] = tolower(str2[i]);
        }
    }
    temp2[k] = '\0';

    if (strlen(temp1) != strlen(temp2)) {
        return 0;
    }
    sortString(temp1);
    sortString(temp2);


    return strcmp(temp1, temp2) == 0;
}

int main() {
    char str1[MAX], str2[MAX];

    printf("Enter the first string: ");
    fgets(str1, MAX, stdin);
    str1[strcspn(str1, "\n")] = '\0';  // Remove newline character

    printf("Enter the second string: ");
    fgets(str2, MAX, stdin);
    str2[strcspn(str2, "\n")] = '\0';  // Remove newline character

    if (areAnagrams(str1, str2)) {
        printf("\"%s\" and \"%s\" are anagrams.\n", str1, str2);
    } else {
        printf("\"%s\" and \"%s\" are not anagrams.\n", str1, str2);
    }

    return 0;
}
